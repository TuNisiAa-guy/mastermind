Index: src/me/tunisiaa/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package me.tunisiaa;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n        MasterMind mm = new MasterMind(4, 9);\r\n        mm.startGame();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/me/tunisiaa/Main.java b/src/me/tunisiaa/Main.java
--- a/src/me/tunisiaa/Main.java	(revision cda48f79f4b7139285f72f20045fdc0e27d49fca)
+++ b/src/me/tunisiaa/Main.java	(date 1697364320219)
@@ -1,11 +1,31 @@
 package me.tunisiaa;
 
-import java.util.Random;
+import java.util.Scanner;
 
 public class Main {
-
     public static void main(String[] args) {
-        MasterMind mm = new MasterMind(4, 9);
-        mm.startGame();
+        boolean rematch = false;
+        do{
+            boolean isInputCorrect = true;
+            Scanner sc = new Scanner(System.in);
+            MasterMind mm = new MasterMind(4, 9);
+            mm.startGame();
+            System.out.print("Vuoi riprovare? ( Si / No ) : ");
+            do{
+                switch(sc.nextLine()){
+                    case "Si":
+                        rematch = true;
+                        isInputCorrect = true;
+                        break;
+                    case "No":
+                        rematch = false;
+                        isInputCorrect = true;
+                        break;
+                    default:
+                        System.out.print("Devi scrivere o \"Si\" o \"No\" : ");
+                        isInputCorrect = false;
+                }
+            }while(!isInputCorrect);
+        }while(rematch);
     }
 }
Index: src/me/tunisiaa/MasterMind.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package me.tunisiaa;\r\n\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class MasterMind {\r\n    private int digits;\r\n    private int tries;\r\n    private int numberToGuess;\r\n    public int currentTurn = 1;\r\n\r\n    public MasterMind(int digits, int tries){\r\n        this.digits = digits;\r\n        this.tries = tries;\r\n        Random r = new Random();\r\n        numberToGuess = (int) Math.pow(10, digits - 1) + r.nextInt(9*(int) Math.pow(10, digits - 1));\r\n    }\r\n\r\n    private int numbersCorrect(int guess){\r\n        int n = 0;\r\n        int tempGuess = guess;\r\n        int tempNumberToGuess = this.numberToGuess;\r\n        for(int i = 0; i < this.digits; i++){\r\n            int digitA = tempGuess % 10;\r\n            int digitB = tempNumberToGuess % 10;\r\n            if(digitA == digitB){\r\n                n++;\r\n            }\r\n            tempGuess /= 10;\r\n            tempNumberToGuess /= 10;\r\n        }\r\n        return n;\r\n    }\r\n\r\n    private int numbersPresent(int guess){\r\n        int n = 0;\r\n        for(int i = 0; i < this.digits; i++){\r\n            for(int j = 0; j < this.digits; j++){\r\n                int digitA = (guess / (int) Math.pow(10, i)) % 10;\r\n                int digitB = (this.numberToGuess / (int) Math.pow(10, j)) % 10;\r\n                if(digitA == digitB){\r\n                    n++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    public void startGame(){\r\n        for(; this.currentTurn <= this.tries; this.currentTurn++){\r\n            int guess;\r\n            Scanner sc = new Scanner(System.in);\r\n            do{\r\n                System.out.printf(\"\\nTentativo %s:\\nScrivi un numero di %s cifre :\", this.currentTurn, this.digits);\r\n                guess = sc.nextInt();\r\n            }while(guess < (int) Math.pow(10, this.digits - 1) || guess >= (int) Math.pow(10, digits));\r\n\r\n            System.out.printf(\"%s delle %s cifre date sono nella posizione corretta e delle rimanenti %s sono presenti ma in posizioni sbagliate.\\n\", numbersCorrect(guess), this.digits, numbersPresent(guess) - numbersCorrect(guess));\r\n            if(numbersCorrect(guess) == 4){\r\n                System.out.printf(\"Complimenti! Il numero era %s, ti sono serviti %s turni per indovinare.\\n\", this.numberToGuess, this.currentTurn);\r\n                return;\r\n            }\r\n        }\r\n        System.out.printf(\"Purtroppo i %s tentativi non ti sono bastati per giungere a %s.\\n\", this.currentTurn, this.numberToGuess);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/me/tunisiaa/MasterMind.java b/src/me/tunisiaa/MasterMind.java
--- a/src/me/tunisiaa/MasterMind.java	(revision cda48f79f4b7139285f72f20045fdc0e27d49fca)
+++ b/src/me/tunisiaa/MasterMind.java	(date 1697363381921)
@@ -4,9 +4,9 @@
 import java.util.Scanner;
 
 public class MasterMind {
-    private int digits;
-    private int tries;
-    private int numberToGuess;
+    private final int digits;
+    private final int tries;
+    private final int numberToGuess;
     public int currentTurn = 1;
 
     public MasterMind(int digits, int tries){
@@ -48,7 +48,7 @@
     }
 
     public void startGame(){
-        for(; this.currentTurn <= this.tries; this.currentTurn++){
+        while(this.currentTurn <= this.tries){
             int guess;
             Scanner sc = new Scanner(System.in);
             do{
@@ -57,10 +57,11 @@
             }while(guess < (int) Math.pow(10, this.digits - 1) || guess >= (int) Math.pow(10, digits));
 
             System.out.printf("%s delle %s cifre date sono nella posizione corretta e delle rimanenti %s sono presenti ma in posizioni sbagliate.\n", numbersCorrect(guess), this.digits, numbersPresent(guess) - numbersCorrect(guess));
-            if(numbersCorrect(guess) == 4){
+            if(numbersCorrect(guess) == this.digits){
                 System.out.printf("Complimenti! Il numero era %s, ti sono serviti %s turni per indovinare.\n", this.numberToGuess, this.currentTurn);
                 return;
             }
+            this.currentTurn++;
         }
         System.out.printf("Purtroppo i %s tentativi non ti sono bastati per giungere a %s.\n", this.currentTurn, this.numberToGuess);
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectKey\">\r\n    <option name=\"state\" value=\"project://e2804f05-5315-4fc6-a121-c522a6c26470\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8.0\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision cda48f79f4b7139285f72f20045fdc0e27d49fca)
+++ b/.idea/misc.xml	(date 1697349663653)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ProjectKey">
     <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
